# Generated by Django 5.2.6 on 2025-09-21 21:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('secretario', 'Secretário'), ('residente', 'Residente'), ('preceptor', 'Preceptor'), ('coordenador_programa', 'Coordenador de Programa'), ('coordenador_geral', 'Coordenador Geral'), ('tutor', 'Tutor')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jornada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('reprovado', 'Reprovado'), ('justificado', 'Justificado')], default='pendente', max_length=20)),
                ('justificativa_geral', models.TextField(blank=True, null=True)),
                ('data_validacao', models.DateTimeField(blank=True, null=True)),
                ('observacao_validador', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PerfilCoordenadorGeral',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('titulo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PerfilPreceptor',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('especialidade', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PerfilSecretario',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PerfilTutor',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('especialidade', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('normal', 'Normal'), ('aula_teorica', 'Aula Teórica'), ('atestado', 'Atestado'), ('evento_autorizado', 'Evento Autorizado')], max_length=30)),
                ('detalhe', models.CharField(blank=True, max_length=200, null=True)),
                ('jornada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atividades', to='sistema_frequencia.jornada')),
            ],
        ),
        migrations.CreateModel(
            name='Ponto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hora', models.TimeField()),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('inicio_intervalo', 'Início do Intervalo'), ('fim_intervalo', 'Fim do Intervalo')], max_length=20)),
                ('atividade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pontos', to='sistema_frequencia.atividade')),
            ],
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('nome', models.CharField(max_length=200)),
                ('duracao', models.CharField(max_length=50)),
                ('coordenador', models.ForeignKey(blank=True, limit_choices_to={'role': 'coordenador_programa'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sistema_frequencia.setor')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('programa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_frequencia.programa')),
            ],
        ),
        migrations.CreateModel(
            name='PerfilCoordenadorPrograma',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('programa', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sistema_frequencia.programa')),
            ],
        ),
        migrations.AddField(
            model_name='jornada',
            name='validador',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jornadas_validadas', to='sistema_frequencia.perfilpreceptor'),
        ),
        migrations.CreateModel(
            name='PerfilResidente',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('matricula', models.CharField(max_length=50, unique=True)),
                ('preceptor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sistema_frequencia.perfilpreceptor')),
                ('turma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sistema_frequencia.turma')),
            ],
        ),
        migrations.AddField(
            model_name='jornada',
            name='residente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_frequencia.perfilresidente'),
        ),
        migrations.AlterUniqueTogether(
            name='jornada',
            unique_together={('residente', 'data')},
        ),
    ]
